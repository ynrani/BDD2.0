/******************************************************************************
 *
 *      GenerateFeatureFilesServlet.java
 *
 *      Capgemini Confidential
 *      CG Source Materials
 *      © Copyright Capgemini 2017
 *
 *
 *******************************************************************************
 *
 *   Date....	WHO 	Description...............................................
 *	11/04/17	NR		First Created to Generate all features files at once
 *	
 ******************************************************************************/

package com.cg.bdd.servlet;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import com.cg.bdd.common.Common_Runtime;


public class GenerateFeatureFilesServlet extends HttpServlet {

	private static final long serialVersionUID = 1L;

	// Initialize global variables
	public void init() throws ServletException {
	}

	// Process the HTTP Get request

	public void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {

		response.setContentType("text/html;charset=UTF-8");
		String toolName = request.getParameter("ToolList");
		Common_Runtime cmrt = new Common_Runtime();
		HttpSession session = request.getSession();
		System.out.println("servlet context " + this.getServletContext());
		System.out.println("Tool Selected is " + toolName);

		System.out.println("Generate Feature Files Param : "+request.getParameter("GenerateFeatures"));
		if (request.getParameter("GenerateFeatures") != null) {
			System.out.println("Generate Features condition is satisfied");
			
			String configurablePath = cmrt.m_filePath;
			System.out.println("configurablePath: " + configurablePath);

			String resourcesPath = cmrt.m_filePath + "\\";
			//String resourcesPath = getServletContext().getRealPath(resourcesFolder);
			System.out.println("Resources Folder: " + resourcesPath);
			
			String basepath = resourcesPath + "\\" + "features" + "\\" + toolName + "\\" ;
			System.out.println("Path: " + basepath);

			Boolean success = (new File(basepath)).mkdirs();
			if (!success) {
				System.out.println("Directory "+ basepath +"  is already created");
			}else
			{
				System.out.println("Directory "+ basepath +" is successfully created");
			}
			String query = "select * from userstory where IterationID in (select IterationID from iteration where ReleaseID in (Select ReleaseID from bddrelease where ToolID = (select ToolID from almtool where ToolName = \"" + toolName + "\")));";
			System.out.println("Select Query is :" + query);
			String userStoryID = null;
			String userStoryName =  null;
			String userStoryDesc = null;
			String fileName= null;
			String filePath=null;
			ResultSet rs=cmrt.executeQuery(query);
			try {
				rs.beforeFirst();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
			try {
				while (rs.next())
				{
					userStoryID = rs.getString("UserStoryID");
					userStoryName = rs.getString("UserStoryName");
					userStoryDesc = rs.getString("UserStoryDescription");
					String path = basepath + userStoryName;
					StringBuffer sbf, fileData=null;
					fileData= new StringBuffer();
					fileData.append("@Tool:"+ toolName + "\n");
					fileData.append("@Release:All" +"\n");
					fileData.append("@Iteration:All" +"\n");
					fileData.append("@UserStory Name:"+ userStoryName + "\n");
					fileData.append("@Scenario:"+userStoryDesc + "\n");
					List<String> scenes = null;
					System.out.println("FeatureFile Folder path "+ path);
					 success = (new File(path)).mkdirs();
					 fileName = userStoryName + ".feature";
						filePath = path + "\\" + fileName;
					if (!success) {
						System.out.println("Directory "+ path +"  is already created");
						File f=new File(filePath);
						if (!(f.exists() && !f.isDirectory())) { 
							sbf = new StringBuffer();
							scenes = cmrt.getScenarios(userStoryID);
							for (int i=0;i<scenes.size();i++)
							{
								sbf.append(scenes.get(i)+"\n");
							}
							fileData.append(sbf);
						    writeToFile(filePath, fileData.toString() , false);
						}
						else
						{
							sbf = new StringBuffer();
							scenes = cmrt.getScenarios(userStoryID);
							for (int i=0;i<scenes.size();i++)
							{
								sbf.append(scenes.get(i)+"\n");
							}
						    writeToFile(filePath, fileData.toString() , false);
						}
					}else
					{
						System.out.println("Directory "+ path +" is successfully created");
						sbf = new StringBuffer();
						scenes = cmrt.getScenarios(userStoryID);
						for (int i=0;i<scenes.size();i++)
						{
							sbf.append(scenes.get(i)+"\n");
						}
						writeToFile(filePath, fileData.toString() , false);
					}
					
					
					
					/*if (!userStoryDesc.equals(""))
					{
						FileWriter fileWriter = new FileWriter(filePath, false);
						fileWriter.write(userStoryDesc, 0, userStoryDesc.length());
						fileWriter.close();
						String Statement = "Data successfully write into File, put on path : " + filePath;
						session.setAttribute("submitDone", Statement);// Just initialize a
						// random variable.
					}*/
				}
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
		response.sendRedirect("GenerateFeatureFiles.jsp");

	}
	public void writeToFile(String fileName, String fileContent, boolean append) throws IOException
	{
		FileWriter fileWriter = new FileWriter(fileName, append);
		fileWriter.write(fileContent, 0, fileContent.length());
		fileWriter.close();
	}

}